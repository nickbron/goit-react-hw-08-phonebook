{"version":3,"sources":["Componets/PrivateRoute.js","Componets/PublicRoute.js","Componets/AuthNav/AuthNav.styled.jsx","Componets/Navigation/Navigation.jsx","Componets/AuthNav/AuthNav.js","Componets/AppBar/AppBar.styled.jsx","Componets/UserMenu/Pin.png","Componets/UserMenu/UserMenu.js","Componets/AppBar/AppBar.jsx","Componets/Container/container.styled.jsx","Componets/Container/container.js","Componets/App.jsx","redux/contacts-reducer.js","redux/store.js","index.js","redux/Auth/auth-operations.js","redux/Auth/auth-slice.js","redux/Auth/auth-selectors.js","redux/contactSlice.js","redux/contacts-actions.js"],"names":["PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","NavigLink","styled","NavLink","Navig","nav","Navigation","AuthNav","Header","header","styles","container","display","alignItems","avatar","marginRight","name","fontWeight","UserMenu","dispatch","useDispatch","getUsername","defaultAvatar","style","src","alt","width","Button","variant","type","onClick","authOperations","logOut","Appbar","Container","div","Wrapper","RegisterView","lazy","LoginView","PhoneBookView","App","isError","getError","useEffect","toast","error","fetchCurrentUser","fallback","path","exact","toastOptions","className","border","padding","color","reducerItems","createReducer","actions","addItem","state","payload","removeItem","filter","contact","id","reducerFilter","filterItem","_","combineReducers","items","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","contactApi","reducerPath","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","setupListeners","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","rejectWithValue","a","post","data","logIn","response","thunkAPI","getState","persistedToken","get","operations","authSlice","createSlice","initialState","user","email","extraReducers","fulfilled","action","pending","rejected","createApi","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","set","tagTypes","endpoints","builder","fetchContacts","query","providesTags","DeleteContact","mutation","ContactId","url","method","invalidatesTags","CreateContact","body","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","createAction","shortid","generate"],"mappings":"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","file":"static/js/main.2d00c725.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/Auth';\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/Auth';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const NavigLink = styled(NavLink)`\r\n  color: #2a363b;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  display: inline-block;\r\n  text-decoration: none;\r\n\r\n  &.active {\r\n    color: #2196f3;\r\n  }\r\n  :not(:last-child) {\r\n    margin-right: 15px;\r\n  }\r\n\r\n  :last-child {\r\n    /* margin-right: 15px; */\r\n    /* color: green;\r\n    position: absolute;\r\n    right: 201px; */\r\n  }\r\n`;\r\n\r\nexport const Navig = styled.nav`\r\n  padding: 12px;\r\n`;\r\n","import { NavigLink, Navig } from '../AuthNav/AuthNav.styled';\r\n\r\nconst Navigation = () => (\r\n  <Navig>\r\n    <NavigLink to=\"/Contacts\">PhoneBook</NavigLink>\r\n  </Navig>\r\n);\r\n\r\nexport default Navigation;\r\n","import { NavigLink, Navig } from './AuthNav.styled';\n\nconst AuthNav = () => (\n  <Navig>\n    <NavigLink to=\"/Register\">Registration</NavigLink>\n    <NavigLink to=\"/Login\">Login</NavigLink>\n  </Navig>\n);\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-height: 80px;\r\n  margin-bottom: 16px;\r\n  border-bottom: 1px solid #2a363b;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Pin.f2e180c3.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/Auth';\nimport defaultAvatar from '../UserMenu/Pin.png';\nimport { Button, Box } from '@mui/material';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n\n      <Button\n        variant=\"outlined\"\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Exit\n      </Button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport AuthNav from 'Componets/AuthNav/AuthNav';\r\nimport { Header } from './AppBar.styled';\r\nimport UserMenu from '../UserMenu';\r\nimport { authSelectors } from '../../redux/Auth';\r\n\r\nexport default function Appbar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </Header>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1170px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n","import { Container } from './container.styled';\n\nexport default function Wrapper({ children }) {\n  return <Container>{children}</Container>;\n}\n","import { toast, Toaster } from 'react-hot-toast';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport authSelectors from '../redux/Auth/auth-selectors';\nimport { authOperations } from 'redux/Auth';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nimport Appbar from './AppBar/AppBar';\nimport Wrapper from './Container/container';\n\n// const HomeView = lazy(() =>\n//   import('./Views/HomeView' /*webpackChunkName: \"home-page\"*/),\n// );\n\nconst RegisterView = lazy(() =>\n  import('./Views/RegisterView' /*webpackChunkName: \"Registration-page\"*/),\n);\nconst LoginView = lazy(() =>\n  import('./Views/LoginView' /*webpackChunkName: \"Login-page\"*/),\n);\n\nconst PhoneBookView = lazy(() =>\n  import('./Views/PhoneBookView' /*webpackChunkName: \"PhoneBook-page\"*/),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isError = useSelector(authSelectors.getError);\n\n  useEffect(() => {\n    if (isError) {\n      toast.error('Incorrect Login or Password...');\n    }\n  }, [isError]);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Wrapper>\n        <Appbar />\n        <Suspense fallback={<h1>LOADING...</h1>}>\n          <Switch>\n            {/* <PublicRoute path=\"/\" exact>\n              <HomeView />\n            </PublicRoute> */}\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <PhoneBookView />\n            </PrivateRoute>\n            <PublicRoute\n              exact\n              path=\"/register\"\n              redirectTo=\"/contacts\"\n              restricted\n            >\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n              <LoginView />\n            </PublicRoute>\n          </Switch>\n          <Toaster\n            toastOptions={{\n              className: '',\n              style: {\n                border: '1px solid #713200',\n                padding: '16px',\n                color: '#713200',\n              },\n            }}\n          />\n        </Suspense>\n      </Wrapper>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst reducerItems = createReducer([], {\n  [actions.addItem]: (state, { payload }) => [...state, payload],\n  [actions.removeItem]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst reducerFilter = createReducer('', {\n  [actions.filterItem]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: reducerItems,\n  filter: reducerFilter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport contactsReducer from './contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactApi } from './contactSlice';\nimport { authReducer } from './Auth';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n      // ],\n    }),\n    contactApi.middleware,\n  ],\n});\n\nexport const persistor = persistStore(store);\nsetupListeners(persistor.dispatch);\n\n// middleware: getDefaultMiddleware => [\n//   ...getDefaultMiddleware(),\n//   contactApi.middleware,\n// ],\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from 'Componets/App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n//import {fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, rejectWithValue) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    return error;\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isError: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isError = false;\n    },\n    [authOperations.register.pending](state, action) {\n      state.isError = false;\n    },\n    [authOperations.register.rejected](state, action) {\n      state.isError = true;\n    },\n\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isError = false;\n    },\n    [authOperations.logIn.pending](state, action) {\n      state.isError = false;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.isError = true;\n    },\n\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      state.isError = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isError = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUsername = state => state.auth.user.name;\nconst getError = state => state.auth.isError;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getError,\n};\nexport default authSelectors;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth.token;\n\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['contact'],\n\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['contact'],\n    }),\n\n    DeleteContact: builder.mutation({\n      query: ContactId => ({\n        url: `/contacts/${ContactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['contact'],\n    }),\n\n    CreateContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: {\n          name,\n          number,\n        },\n      }),\n      invalidatesTags: ['contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addItem = createAction('items/Add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst removeItem = createAction('items/Remove');\n\nconst filterItem = createAction('items/Filter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addItem, removeItem, filterItem };\n"],"sourceRoot":""}