{"version":3,"sources":["Componets/ContactForm/ContactForm.styled.jsx","Componets/ContactForm/ContactForm.jsx","Componets/ContactList/ContactList.styled.jsx","Componets/Spinner/Spinner.js","Componets/ContactList/ContactList.jsx","Componets/Filter/Filter.jsx","Componets/App.styled.jsx","Componets/Views/PhoneBookView.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","data","useFetchContactsQuery","useCreateContactMutation","createContact","onSubmit","e","preventDefault","name","currentTarget","elements","value","number","find","contact","toLowerCase","toast","error","reset","handleSubmit","type","pattern","title","required","spin","keyframes","Spinner","CgSpinner","ContactList","data1","isFetching","useDeleteContactMutation","deleteContact","isLoading","contacts","useSelector","state","filter","normalizedFilter","includes","map","onClick","id","disabled","size","defaultProps","Filter","dispatch","useDispatch","autoComplete","onChange","actions","filterItem","target","Card","div","PhoneBookView","className"],"mappings":"mOAEaA,EAAOC,IAAOC,KAAV,yEAKJC,EAAQF,IAAOG,MAAV,8JAULC,EAASJ,IAAOK,OAAV,mf,uBCIJ,SAASC,IACtB,IAAQC,EAASC,cAATD,KACR,EAAwBE,cAAjBC,EAAP,oBAEA,OACE,8BACE,eAACX,EAAD,CAAMY,SAAU,SAAAC,GAAC,OAnBF,SAACA,EAAGL,EAAMG,GAC7BE,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAAcC,SAASF,KAAKG,MACrCC,EAASN,EAAEG,cAAcC,SAASE,OAAOD,MAE3CV,EAAKY,MAAK,SAAAC,GAAO,OAAIA,EAAQN,KAAKO,gBAAkBP,EAAKO,iBAC3DC,IAAMC,MAAN,WAAgBT,EAAhB,8BAGFJ,EAAc,CAAEI,OAAMI,WACtBN,EAAEG,cAAcS,SASSC,CAAab,EAAGL,EAAMG,IAA3C,UACE,cAACR,EAAD,CACEwB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,ocAER,cAAC1B,EAAD,CACEwB,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,cAACzB,EAAD,CAAQsB,KAAK,SAAb,8BCxCD,I,EAAMtB,EAASJ,IAAOK,OAAV,+e,gCCGbyB,EAAOC,YAAH,yGASGC,EAAU,YAAOC,IAAP,qBAAH,aACLH,EADK,2BCJL,SAASI,IACtB,IAAIC,EACJ,EAA6B3B,cAArBD,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,WACd,EAAuCC,cAAvC,mBAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAElBC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,UACrD,GAAIpC,EAAM,CACR,IAAMqC,EAAmBJ,EAASnB,cAClCc,EAAQ5B,EAAKoC,QAAO,SAAAvB,GAAO,OACzBA,EAAQN,KAAKO,cAAcwB,SAASD,MAIxC,OACE,qCACGR,GAAc,cAACJ,EAAD,IACdG,GACC,6BACGA,EAAMW,KAAI,SAAA1B,GAAO,OAChB,+BACE,iCAAOA,EAAQN,KAAf,QACA,+BAAOM,EAAQF,SAEf,eAAC,EAAD,CACE6B,QAAS,kBAAMT,EAAclB,EAAQ4B,KACrCtB,KAAK,SACLuB,SAAUV,EAHZ,UAKGA,GAAa,cAACP,EAAD,CAASkB,KAAM,KAL/B,cAJO9B,EAAQ4B,YDX7BhB,EAAQmB,aAAe,CACrBD,KAAM,I,cEdO,SAASE,IACtB,IAAMT,EAASF,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,UAC7CU,EAAWC,cACjB,OACE,8DAEE,cAACpD,EAAD,CACEwB,KAAK,OACLZ,KAAK,SACLyC,aAAa,MACbtC,MAAO0B,EACPa,SAAU,SAAA5C,GAAC,OAAIyC,EAASI,IAAQC,WAAW9C,EAAE+C,OAAO1C,cCbrD,IAAM2C,EAAO5D,IAAO6D,IAAV,4GCGF,SAASC,IACtB,OACE,eAACF,EAAD,WACE,oBAAIG,UAAU,QAAd,uBACA,cAACzD,EAAD,IACA,oBAAIyD,UAAU,QAAd,sBACA,cAACX,EAAD,IACA,cAAClB,EAAD","file":"static/js/PhoneBook-page.015cc563.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  width: 50%;\r\n  :focus {\r\n    border: 3px solid #555;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  padding: 5px 10px;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  color: #fff;\r\n  background-color: #4caf50;\r\n  border: none;\r\n  border-radius: 15px;\r\n  box-shadow: 0 9px #999;\r\n\r\n  :hover {\r\n    background-color: #3e8e41;\r\n  }\r\n  :active {\r\n    background-color: #3e8e41;\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n","import { Button, Input, Form } from './ContactForm.styled';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport {\r\n  useFetchContactsQuery,\r\n  useCreateContactMutation,\r\n} from 'redux/contactSlice';\r\n\r\nconst handleSubmit = (e, data, createContact) => {\r\n  e.preventDefault();\r\n  const name = e.currentTarget.elements.name.value;\r\n  const number = e.currentTarget.elements.number.value;\r\n\r\n  if (data.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n    toast.error(` ${name} is already in contacts.`);\r\n    return;\r\n  }\r\n  createContact({ name, number });\r\n  e.currentTarget.reset();\r\n};\r\n\r\nexport default function ContactForm() {\r\n  const { data } = useFetchContactsQuery();\r\n  const [createContact] = useCreateContactMutation();\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={e => handleSubmit(e, data, createContact)}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  padding: 5px 5px;\r\n  margin-left: 10px;\r\n  font-size: 10px;\r\n  width: 50px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  color: #fff;\r\n  background-color: #4caf50;\r\n  border: none;\r\n  border-radius: 15px;\r\n  /* box-shadow: 0 9px #999; */\r\n\r\n  :hover {\r\n    background-color: red;\r\n  }\r\n  :active {\r\n    background-color: red;\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n","import PropTypes from 'prop-types';\r\nimport { Button } from '../ContactList/ContactList.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { Spinner } from '../Spinner/Spinner';\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from 'redux/contactSlice';\r\n\r\nexport default function ContactList() {\r\n  let data1;\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  const contacts = useSelector(state => state.contacts.filter);\r\n  if (data) {\r\n    const normalizedFilter = contacts.toLowerCase();\r\n    data1 = data.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <Spinner />}\r\n      {data1 && (\r\n        <ul>\r\n          {data1.map(contact => (\r\n            <li key={contact.id}>\r\n              <span>{contact.name}: </span>\r\n              <span>{contact.number}</span>\r\n\r\n              <Button\r\n                onClick={() => deleteContact(contact.id)}\r\n                type=\"button\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading && <Spinner size={12} />}\r\n                DELETE\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import { Input } from '../ContactForm/ContactForm.styled';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts-actions';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      Find contacts by name:\r\n      <Input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        autoComplete=\"off\"\r\n        value={filter}\r\n        onChange={e => dispatch(actions.filterItem(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Card = styled.div`\r\n  width: 400px;\r\n  padding: 20px;\r\n  margin: 20px;\r\n  border: 1px solid black;\r\n`;\r\n","import ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Card } from '../App.styled';\n\nexport default function PhoneBookView() {\n  return (\n    <Card>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Card>\n  );\n}\n"],"sourceRoot":""}